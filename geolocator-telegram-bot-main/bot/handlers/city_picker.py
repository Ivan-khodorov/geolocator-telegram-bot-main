from aiogram import Router, F, types
from aiogram.types import Message, CallbackQuery
from aiogram.fsm.context import FSMContext

from bot.state import States
from database.session import async_session
from database.models import User

router = Router()

TOP_CITIES = [
    "–ú–æ—Å–∫–≤–∞", "–°–∞–Ω–∫—Ç-–ü–µ—Ç–µ—Ä–±—É—Ä–≥", "–ù–æ–≤–æ—Å–∏–±–∏—Ä—Å–∫", "–ï–∫–∞—Ç–µ—Ä–∏–Ω–±—É—Ä–≥", "–ö–∞–∑–∞–Ω—å",
    "–ù–∏–∂–Ω–∏–π –ù–æ–≤–≥–æ—Ä–æ–¥", "–ß–µ–ª—è–±–∏–Ω—Å–∫", "–°–∞–º–∞—Ä–∞", "–†–æ—Å—Ç–æ–≤-–Ω–∞-–î–æ–Ω—É", "–£—Ñ–∞"
]

@router.message(F.text == "/cities")
async def cmd_cities(message: Message, state: FSMContext):
    telegram_id = str(message.from_user.id)
    async with async_session() as session:
        user = await session.scalar(
            User.__table__.select().where(User.telegram_id == telegram_id)
        )
        if user is None or user.role != "admin":
            await message.answer("‚õî –≠—Ç–∞ –∫–æ–º–∞–Ω–¥–∞ –¥–æ—Å—Ç—É–ø–Ω–∞ —Ç–æ–ª—å–∫–æ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞–º.")
            return

    # –ö–Ω–æ–ø–∫–∏ —Å –Ω–∞–∑–≤–∞–Ω–∏—è–º–∏ –≥–æ—Ä–æ–¥–æ–≤
    buttons = [
        [types.InlineKeyboardButton(text=city, callback_data=f"city_{city}")]
        for city in TOP_CITIES
    ]
    markup = types.InlineKeyboardMarkup(inline_keyboard=buttons)
    await message.answer("üèô –í—ã–±–µ—Ä–∏—Ç–µ –≥–æ—Ä–æ–¥:", reply_markup=markup)
    await state.set_state(States.ADMIN_CITY_SELECT)

@router.callback_query(F.data.startswith("city_"))
async def handle_city_choice(callback: CallbackQuery, state: FSMContext):
    city = callback.data.replace("city_", "")
    await state.update_data(city=city)
    await callback.message.edit_text(f"‚úÖ –ì–æ—Ä–æ–¥ –≤—ã–±—Ä–∞–Ω: {city}\n\n–¢–µ–ø–µ—Ä—å –º–æ–∂–Ω–æ –ø–µ—Ä–µ–π—Ç–∏ –∫ –≤—ã–±–æ—Ä—É –æ–±–ª–∞—Å—Ç–∏.")
    await callback.answer()
